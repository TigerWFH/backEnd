"use strict";
var getConfigData_1 = require('./getConfigData');
var express = require('express');
var jsonWebpToken = require('jsonwebtoken');
var router = express.Router();
exports.router = router;
router.get('/', function (req, res, next) {
    var appData = new getConfigData_1.AppDataConfig();
    var token = jsonWebpToken.sign({ 'name': 'monkey', 'age': 12, 'exp': Math.floor(Date.now() / 1000 + 0) }, 'monkeyskey');
    console.log('token--->', token);
    var plain = jsonWebpToken.decode(token);
    console.log('plain--->', plain);
    try {
        var decode = jsonWebpToken.verify(token, 'monkeyskey');
        console.log('decode--->', decode);
    }
    catch (err) {
        throw err;
    }
    appData.client.connect(appData.serverUrl, function (err, db) {
        if (err) {
            console.log('conntion error', err);
            res.sendStatus(500);
            throw new Error(err.message);
        }
        db.collection('users').find().toArray(function (err, result) {
            if (err) {
                res.sendStatus(404);
                console.log('query error', err);
                throw err;
            }
            res.json(result);
        });
    });
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXJzL3Jvb3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLDhCQUE4QixpQkFDOUIsQ0FBQyxDQUQ4QztBQUMvQyxJQUFZLE9BQU8sV0FBTSxTQUN6QixDQUFDLENBRGlDO0FBQ2xDLElBQVksYUFBYSxXQUFNLGNBRS9CLENBQUMsQ0FGNEM7QUFFN0MsSUFBSSxNQUFNLEdBQUcsT0FBTyxDQUFDLE1BQU0sRUFBRTtBQW1DcEIsY0FBTSxVQW5DYztBQUM3QixNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxVQUFDLEdBQW9CLEVBQUUsR0FBcUIsRUFBRSxJQUFTO0lBRW5FLElBQUksT0FBTyxHQUFHLElBQUksNkJBQWEsRUFBRSxDQUFBO0lBQ2pDLElBQUksS0FBSyxHQUFHLGFBQWEsQ0FBQyxJQUFJLENBQUMsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLElBQUksR0FBRyxDQUFDLENBQUMsRUFBRSxFQUFFLFlBQVksQ0FBQyxDQUFBO0lBQ3ZILE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFFLEtBQUssQ0FBQyxDQUFBO0lBQy9CLElBQUksS0FBSyxHQUFHLGFBQWEsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUE7SUFDdkMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsS0FBSyxDQUFDLENBQUE7SUFDL0IsSUFBSSxDQUFDO1FBQ0QsSUFBSSxNQUFNLEdBQUcsYUFBYSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsWUFBWSxDQUFDLENBQUE7UUFDdEQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsTUFBTSxDQUFDLENBQUE7SUFDckMsQ0FDQTtJQUFBLEtBQUssQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFHVCxNQUFNLEdBQUcsQ0FBQTtJQUNiLENBQUM7SUFFRCxPQUFPLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsU0FBUyxFQUFFLFVBQUMsR0FBUSxFQUFFLEVBQU87UUFDeEQsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNOLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUUsR0FBRyxDQUFDLENBQUE7WUFDbEMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQTtZQUNuQixNQUFNLElBQUksS0FBSyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQTtRQUNoQyxDQUFDO1FBQ0QsRUFBRSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxPQUFPLENBQUMsVUFBQyxHQUFRLEVBQUUsTUFBVztZQUN4RCxFQUFFLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO2dCQUNOLEdBQUcsQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUE7Z0JBQ25CLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLEdBQUcsQ0FBQyxDQUFBO2dCQUMvQixNQUFNLEdBQUcsQ0FBQTtZQUNiLENBQUM7WUFDRCxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFBO1FBQ3BCLENBQUMsQ0FBQyxDQUFBO0lBQ04sQ0FBQyxDQUFDLENBQUE7QUFDTixDQUFDLENBQUMsQ0FBQTtBQUVnQiIsImZpbGUiOiJyb3V0ZXJzL3Jvb3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBEYXRhQ29uZmlnIH0gZnJvbSAnLi9nZXRDb25maWdEYXRhJ1xyXG5pbXBvcnQgKiBhcyBleHByZXNzIGZyb20gJ2V4cHJlc3MnXHJcbmltcG9ydCAqIGFzIGpzb25XZWJwVG9rZW4gZnJvbSAnanNvbndlYnRva2VuJ1xyXG5cclxudmFyIHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcclxucm91dGVyLmdldCgnLycsIChyZXE6IGV4cHJlc3MuUmVxdWVzdCwgcmVzOiBleHByZXNzLlJlc3BvbnNlLCBuZXh0OiBhbnkpID0+IHtcclxuICAgIC8vdGhyb3cgbmV3IEVycm9yKCdhYmMnKVxyXG4gICAgbGV0IGFwcERhdGEgPSBuZXcgQXBwRGF0YUNvbmZpZygpXHJcbiAgICB2YXIgdG9rZW4gPSBqc29uV2VicFRva2VuLnNpZ24oeyAnbmFtZSc6ICdtb25rZXknLCAnYWdlJzogMTIsICdleHAnOiBNYXRoLmZsb29yKERhdGUubm93KCkgLyAxMDAwICsgMCkgfSwgJ21vbmtleXNrZXknKVxyXG4gICAgY29uc29sZS5sb2coJ3Rva2VuLS0tPicsIHRva2VuKVxyXG4gICAgdmFyIHBsYWluID0ganNvbldlYnBUb2tlbi5kZWNvZGUodG9rZW4pXHJcbiAgICBjb25zb2xlLmxvZygncGxhaW4tLS0+JywgcGxhaW4pXHJcbiAgICB0cnkge1xyXG4gICAgICAgIHZhciBkZWNvZGUgPSBqc29uV2VicFRva2VuLnZlcmlmeSh0b2tlbiwgJ21vbmtleXNrZXknKVxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdkZWNvZGUtLS0+JywgZGVjb2RlKVxyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGVycikge1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGVyci5tZXNzYWdlKVxyXG4gICAgICAgIC8vIOatpOWkhOW6lOivpeaYr+S4muWKoemUmeivr++8jOS4jeW6lOivpeW9seWTjeezu+e7n+eahOi/kOihjFxyXG4gICAgICAgIHRocm93IGVyclxyXG4gICAgfVxyXG5cclxuICAgIGFwcERhdGEuY2xpZW50LmNvbm5lY3QoYXBwRGF0YS5zZXJ2ZXJVcmwsIChlcnI6IGFueSwgZGI6IGFueSkgPT4ge1xyXG4gICAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ2Nvbm50aW9uIGVycm9yJywgZXJyKVxyXG4gICAgICAgICAgICByZXMuc2VuZFN0YXR1cyg1MDApXHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihlcnIubWVzc2FnZSlcclxuICAgICAgICB9XHJcbiAgICAgICAgZGIuY29sbGVjdGlvbigndXNlcnMnKS5maW5kKCkudG9BcnJheSgoZXJyOiBhbnksIHJlc3VsdDogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChlcnIpIHtcclxuICAgICAgICAgICAgICAgIHJlcy5zZW5kU3RhdHVzKDQwNClcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdxdWVyeSBlcnJvcicsIGVycilcclxuICAgICAgICAgICAgICAgIHRocm93IGVyclxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJlcy5qc29uKHJlc3VsdClcclxuICAgICAgICB9KVxyXG4gICAgfSlcclxufSlcclxuXHJcbmV4cG9ydCB7IHJvdXRlciB9O1xyXG5cclxuIl19
